#include "dex_asm.h"

namespace egorich {
namespace rev {

const IDefBase* iTable[256] = {
  // 0
  new IDef<VarSizeBlock>("<nop>"),
  new IDef<L_12x>("move"),
  new IDef<L_22x>("move/from16"),
  new IDef<L_32x>("move/16"),
  new IDef<L_12x>("move-wide"),
  new IDef<L_22x>("move-wide/from16"),
  new IDef<L_32x>("move-wide/16"),
  new IDef<L_12x>("move-object"),
  new IDef<L_22x>("move-object/from16"),
  new IDef<L_32x>("move-object/16"),
  new IDef<L_11x>("move-result"),
  new IDef<L_11x>("move-result-wide"),
  new IDef<L_11x>("move-result-object"),
  new IDef<L_11x>("move-exception"),
  new IDef<L_10x>("return-void"),
  new IDef<L_11x>("return"),
  // 1
  new IDef<L_11x>("return-wide"),
  new IDef<L_11x>("return-object"),
  new IDef<L_11n>("const/4"),
  new IDef<L_21s>("const/16"),
  new IDef<L_31i>("const"),
  new IDef<L_21h>("const/high16"),
  new IDef<L_21s>("const-wide/16"),
  new IDef<L_31i>("const-wide/32"),
  new IDef<L_51l>("const-wide"),
  new IDef<L_21h>("const-wide/high16"),
  new IDef<L_21c>("const-string"),
  new IDef<L_31c>("const-string/jumbo"),
  new IDef<L_21c>("const-class"),
  new IDef<L_11x>("monitor-enter"),
  new IDef<L_11x>("monitor-exit"),
  new IDef<L_21c>("check-cast"),
  // 2
  new IDef<L_22c>("instance-of"),
  new IDef<L_12x>("array-length"),
  new IDef<L_21c>("new-instance"),
  new IDef<L_22c>("new-array"),
  new IDef<L_35c>("filled-new-array"),
  new IDef<L_3rc>("filled-new-array/range"),
  new IDef<L_31t>("fill-array-data"),
  new IDef<L_11x>("throw"),
  new IDef<L_10t>("goto"),
  new IDef<L_20t>("goto/16"),
  new IDef<L_30t>("goto/32"),
  new IDef<L_31t>("packed-switch"),
  new IDef<L_31t>("sparse-switch"),
  new IDef<L_23x>("cmpl-float"),
  new IDef<L_23x>("cmpg-float"),
  new IDef<L_23x>("cmpl-double"),
  // 3
  new IDef<L_23x>("cmpg-double"),
  new IDef<L_23x>("cmp-long"),
  new IDef<L_22t>("if-eq"),
  new IDef<L_22t>("if-ne"),
  new IDef<L_22t>("if-lt"),
  new IDef<L_22t>("if-ge"),
  new IDef<L_22t>("if-gt"),
  new IDef<L_22t>("if-le"),
  new IDef<L_21t>("if-eqz"),
  new IDef<L_21t>("if-nez"),
  new IDef<L_21t>("if-ltz"),
  new IDef<L_21t>("if-gez"),
  new IDef<L_21t>("if-gtz"),
  new IDef<L_21t>("if-lez"),
  new IDef<UnknownLayout>("<unknown>"),  // 3e
  new IDef<UnknownLayout>("<unknown>"),  // 3f
  // 4
  new IDef<UnknownLayout>("<unknown>"),  // 40
  new IDef<UnknownLayout>("<unknown>"),  // 41
  new IDef<UnknownLayout>("<unknown>"),  // 42
  new IDef<UnknownLayout>("<unknown>"),  // 43
  new IDef<L_23x>("aget"),
  new IDef<L_23x>("aget-wide"),
  new IDef<L_23x>("aget-object"),
  new IDef<L_23x>("aget-boolean"),
  new IDef<L_23x>("aget-byte"),
  new IDef<L_23x>("aget-char"),
  new IDef<L_23x>("aget-short"),
  new IDef<L_23x>("aput"),
  new IDef<L_23x>("aput-wide"),
  new IDef<L_23x>("aput-object"),
  new IDef<L_23x>("aput-boolean"),
  new IDef<L_23x>("aput-byte"),
  // 5
  new IDef<L_23x>("aput-char"),
  new IDef<L_23x>("aput-short"),
  new IDef<L_22c>("iget"),
  new IDef<L_22c>("iget-wide"),
  new IDef<L_22c>("iget-object"),
  new IDef<L_22c>("iget-boolean"),
  new IDef<L_22c>("iget-byte"),
  new IDef<L_22c>("iget-char"),
  new IDef<L_22c>("iget-short"),
  new IDef<L_22c>("iput"),
  new IDef<L_22c>("iput-wide"),
  new IDef<L_22c>("iput-object"),
  new IDef<L_22c>("iput-boolean"),
  new IDef<L_22c>("iput-byte"),
  new IDef<L_22c>("iput-char"),
  new IDef<L_22c>("iput-short"),
  // 6
  new IDef<L_21c>("sget"),
  new IDef<L_21c>("sget-wide"),
  new IDef<L_21c>("sget-object"),
  new IDef<L_21c>("sget-boolean"),
  new IDef<L_21c>("sget-byte"),
  new IDef<L_21c>("sget-char"),
  new IDef<L_21c>("sget-short"),
  new IDef<L_21c>("sput"),
  new IDef<L_21c>("sput-wide"),
  new IDef<L_21c>("sput-object"),
  new IDef<L_21c>("sput-boolean"),
  new IDef<L_21c>("sput-byte"),
  new IDef<L_21c>("sput-char"),
  new IDef<L_21c>("sput-short"),
  new IDef<L_35c>("invoke-virtual"),
  new IDef<L_35c>("invoke-super"),
  // 7
  new IDef<L_35c>("invoke-direct"),
  new IDef<L_35c>("invoke-static"),
  new IDef<L_35c>("invoke-interface"),
  new IDef<UnknownLayout>("<unknown>"),  // 73
  new IDef<L_3rc>("invoke-virtual/range"),
  new IDef<L_3rc>("invoke-super/range"),
  new IDef<L_3rc>("invoke-direct/range"),
  new IDef<L_3rc>("invoke-static/range"),
  new IDef<L_3rc>("invoke-interface/range"),
  new IDef<UnknownLayout>("<unknown>"),  // 79
  new IDef<UnknownLayout>("<unknown>"),  // 7A
  new IDef<L_12x>("neg-int"),
  new IDef<L_12x>("not-int"),
  new IDef<L_12x>("neg-long"),
  new IDef<L_12x>("not-long"),
  new IDef<L_12x>("neg-float"),
  // 8
  new IDef<L_12x>("neg-double"),
  new IDef<L_12x>("int-to-long"),
  new IDef<L_12x>("int-to-float"),
  new IDef<L_12x>("int-to-double"),
  new IDef<L_12x>("long-to-int"),
  new IDef<L_12x>("long-to-float"),
  new IDef<L_12x>("long-to-double"),
  new IDef<L_12x>("float-to-int"),
  new IDef<L_12x>("float-to-long"),
  new IDef<L_12x>("float-to-double"),
  new IDef<L_12x>("double-to-int"),
  new IDef<L_12x>("double-to-long"),
  new IDef<L_12x>("double-to-float"),
  new IDef<L_12x>("int-to-byte"),
  new IDef<L_12x>("int-to-char"),
  new IDef<L_12x>("int-to-short"),
  // 9
  new IDef<L_23x>("add-int"),
  new IDef<L_23x>("sub-int"),
  new IDef<L_23x>("mul-int"),
  new IDef<L_23x>("div-int"),
  new IDef<L_23x>("rem-int"),
  new IDef<L_23x>("and-int"),
  new IDef<L_23x>("or-int"),
  new IDef<L_23x>("xor-int"),
  new IDef<L_23x>("shl-int"),
  new IDef<L_23x>("shr-int"),
  new IDef<L_23x>("ushr-int"),
  new IDef<L_23x>("add-long"),
  new IDef<L_23x>("sub-long"),
  new IDef<L_23x>("mul-long"),
  new IDef<L_23x>("div-long"),
  new IDef<L_23x>("rem-long"),
  // A
  new IDef<L_23x>("and-long"),
  new IDef<L_23x>("or-long"),
  new IDef<L_23x>("xor-long"),
  new IDef<L_23x>("shl-long"),
  new IDef<L_23x>("shr-long"),
  new IDef<L_23x>("ushr-long"),
  new IDef<L_23x>("add-float"),
  new IDef<L_23x>("sub-float"),
  new IDef<L_23x>("mul-float"),
  new IDef<L_23x>("div-float"),
  new IDef<L_23x>("rem-float"),
  new IDef<L_23x>("add-double"),
  new IDef<L_23x>("sub-double"),
  new IDef<L_23x>("mul-double"),
  new IDef<L_23x>("div-double"),
  new IDef<L_23x>("rem-double"),
  // B
  new IDef<L_12x>("add-int/2addr"),
  new IDef<L_12x>("sub-int/2addr"),
  new IDef<L_12x>("mul-int/2addr"),
  new IDef<L_12x>("div-int/2addr"),
  new IDef<L_12x>("rem-int/2addr"),
  new IDef<L_12x>("and-int/2addr"),
  new IDef<L_12x>("or-int/2addr"),
  new IDef<L_12x>("xor-int/2addr"),
  new IDef<L_12x>("shl-int/2addr"),
  new IDef<L_12x>("shr-int/2addr"),
  new IDef<L_12x>("ushr-int/2addr"),
  new IDef<L_12x>("add-long/2addr"),
  new IDef<L_12x>("sub-long/2addr"),
  new IDef<L_12x>("mul-long/2addr"),
  new IDef<L_12x>("div-long/2addr"),
  new IDef<L_12x>("rem-long/2addr"),
  // C
  new IDef<L_12x>("and-long/2addr"),
  new IDef<L_12x>("or-long/2addr"),
  new IDef<L_12x>("xor-long/2addr"),
  new IDef<L_12x>("shl-long/2addr"),
  new IDef<L_12x>("shr-long/2addr"),
  new IDef<L_12x>("ushr-long/2addr"),
  new IDef<L_12x>("add-float/2addr"),
  new IDef<L_12x>("sub-float/2addr"),
  new IDef<L_12x>("mul-float/2addr"),
  new IDef<L_12x>("div-float/2addr"),
  new IDef<L_12x>("rem-float/2addr"),
  new IDef<L_12x>("add-double/2addr"),
  new IDef<L_12x>("sub-double/2addr"),
  new IDef<L_12x>("mul-double/2addr"),
  new IDef<L_12x>("div-double/2addr"),
  new IDef<L_12x>("rem-double/2addr"),
  // D
  new IDef<L_22s>("add-int/lit16"),
  new IDef<L_22s>("rsub-int"),
  new IDef<L_22s>("mul-int/lit16"),
  new IDef<L_22s>("div-int/lit16"),
  new IDef<L_22s>("rem-int/lit16"),
  new IDef<L_22s>("and-int/lit16"),
  new IDef<L_22s>("or-int/lit16"),
  new IDef<L_22s>("xor-int/lit16"),
  new IDef<L_22b>("add-int/lit8"),
  new IDef<L_22b>("rsub-int/lit8"),
  new IDef<L_22b>("mul-int/lit8"),
  new IDef<L_22b>("div-int/lit8"),
  new IDef<L_22b>("rem-int/lit8"),
  new IDef<L_22b>("and-int/lit8"),
  new IDef<L_22b>("or-int/lit8"),
  new IDef<L_22b>("xor-int/lit8"),
  // E
  new IDef<L_22b>("shl-int/lit8"),
  new IDef<L_22b>("shr-int/lit8"),
  new IDef<L_22b>("ushr-int/lit8"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  // F
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
  new IDef<UnknownLayout>("<unknown>"),
};

}  // namespace rev
}  // namespace egorich
